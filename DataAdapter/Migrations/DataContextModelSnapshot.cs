// <auto-generated />
using System;
using DataAdapter;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAdapter.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.Database.LogModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Login")
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<long>("UploadedByUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UploadedByUsername")
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Models.Database.ManualCheckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<TimeSpan>("CheckingTimeEllapsed")
                        .HasColumnType("time(6)");

                    b.Property<int>("CpanelBadCount")
                        .HasColumnType("int");

                    b.Property<string>("CpanelBadFilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("CpanelGoodCount")
                        .HasColumnType("int");

                    b.Property<string>("CpanelGoodFilePath")
                        .HasColumnType("longtext");

                    b.Property<string>("DublicateFilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("DublicateFoundedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<long>("FromUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("FromUsername")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("WebmailFilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("WebmailFoundedCount")
                        .HasColumnType("int");

                    b.Property<int>("WhmBadCount")
                        .HasColumnType("int");

                    b.Property<string>("WhmBadFilePath")
                        .HasColumnType("longtext");

                    b.Property<int>("WhmGoodCount")
                        .HasColumnType("int");

                    b.Property<string>("WhmGoodFilePath")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ManualChecks");
                });

            modelBuilder.Entity("Models.Database.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("Balance")
                        .HasColumnType("double");

                    b.Property<string>("Firstname")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Language")
                        .HasColumnType("longtext");

                    b.Property<string>("Lastname")
                        .HasColumnType("longtext");

                    b.Property<int>("LogsUploaded")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Username")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
